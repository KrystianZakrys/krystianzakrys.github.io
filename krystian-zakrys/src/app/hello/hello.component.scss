.image-wrapper {
  width: 400px;
  height: 300px;
  position: relative;

}

.image-wrapper .img-in {
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: left;
}

.image-wrapper div {
  width: 79%;
  height: 95%;
  margin: auto;

  -webkit-box-shadow:0px 0px 118px 47px rgba(17,113,191,0.51);
  -moz-box-shadow: 0px 0px 118px 47px rgba(17,113,191,0.51);
  box-shadow: 0px 0px 118px 47px rgba(17, 113, 191, 0.51);

  background:rgba(17,75,191,0.45);
}

.image-1 {
  clip-path: polygon(0 0, 0 32%, 28% 0);
  transform: translate(-10px, -10px);
  transition: transform 300ms ease;
  transform-origin: top;
  .image-wrapper:hover & {
    transform: translate(0,0);
  }
}

.image-2 {
  clip-path: polygon(28% 0, 0 32%, 0 100%, 17% 100%, 90% 0);
  transform: translate(-30px, 5px);
  transition: transform 300ms ease;
  .image-wrapper:hover & {
    transform: translate(0,0);
  }
}

.image-3 {
  clip-path: polygon(100% 0, 100% 65%, 74% 100%, 17% 100%, 90% 0);
  transform: translate(-15px, -10px);
  transition: transform 300ms ease;
  .image-wrapper:hover & {
    transform: translate(0,0);
  }
}

.image-4 {
  clip-path: polygon(100% 65%, 74% 100%, 100% 100%);
  transform: translate(-32px, 5px);
  transition: transform 300ms ease;
  transform-origin: top;
  .image-wrapper:hover & {
    transform: translate(0,0);
  }
}

.img-bg-photo1 {
  position: absolute;
  top: -114px;
  left: -9.5em;
  width: 173%;
}




/*
CSS @property and the New Style
https://ryanmulligan.dev/blog/css-property-new-style/
*/
@import url("https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,500&display=swap");

:root {
  --shiny-cta-bg: #000000;
  --shiny-cta-bg-subtle: #1a1818;
  --shiny-cta-fg: #ffffff;
  --shiny-cta-highlight: blue;
  --shiny-cta-highlight-subtle: #8484ff;
}

@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-angle-offset {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@property --gradient-percent {
  syntax: "<percentage>";
  initial-value: 5%;
  inherits: false;
}

@property --gradient-shine {
  syntax: "<color>";
  initial-value: white;
  inherits: false;
}

.shiny-cta {
  border: 1px white solid;
  --animation: gradient-angle linear infinite;
  --duration: 3s;
  --shadow-size: 2px;
  isolation: isolate;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  outline-offset: 4px;
  padding: 0.75rem 2.5rem;
  font-family: inherit;
  font-size: 1.125rem;
  line-height: 1.2;
  //border: 1px solid transparent;
  border-radius: 360px;
  color: var(--shiny-cta-fg);
  background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg))
      padding-box,
    conic-gradient(
        from calc(var(--gradient-angle) - var(--gradient-angle-offset)),
        transparent,
        var(--shiny-cta-highlight) var(--gradient-percent),
        var(--gradient-shine) calc(var(--gradient-percent) * 2),
        var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3),
        transparent calc(var(--gradient-percent) * 4)
      )
      border-box;
  box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);

  &::before,
  &::after,
  span::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset-inline-start: 50%;
    inset-block-start: 50%;
    translate: -50% -50%;
    z-index: -1;
  }

  &:active {
    translate: 0 1px;
  }
}

/* Dots pattern */
.shiny-cta::before {
  --size: calc(100% - var(--shadow-size) * 3);
  --position: 2px;
  --space: calc(var(--position) * 2);
  width: var(--size);
  height: var(--size);
  background: radial-gradient(
      circle at var(--position) var(--position),
      white calc(var(--position) / 4),
      transparent 0
    )
    padding-box;
  background-size: var(--space) var(--space);
  background-repeat: space;
  mask-image: conic-gradient(
    from calc(var(--gradient-angle) + 45deg),
    black,
    transparent 10% 90%,
    black
  );
  border-radius: inherit;
  opacity: 0.4;
  z-index: -1;
}

/* Inner shimmer */
.shiny-cta::after {
  --animation: shimmer linear infinite;
  width: 100%;
  aspect-ratio: 1;
  background: linear-gradient(
    -50deg,
    transparent,
    var(--shiny-cta-highlight),
    transparent
  );
  mask-image: radial-gradient(circle at bottom, transparent 40%, black);
  opacity: 0.6;
}

.shiny-cta span {
  z-index: 1;

  &::before {
    --size: calc(100% + 1rem);
    width: var(--size);
    height: var(--size);
    box-shadow: inset 0 -1ex 2rem 4px var(--shiny-cta-highlight);
    opacity: 0;
  }
}

/* Animate */
.shiny-cta {
  --transition: 800ms cubic-bezier(0.25, 1, 0.5, 1);
  transition: var(--transition);
  transition-property: --gradient-angle-offset, --gradient-percent,
    --gradient-shine;

  &,
  &::before,
  &::after {
    animation: var(--animation) var(--duration),
      var(--animation) calc(var(--duration) / 0.4) reverse paused;
    animation-composition: add;
  }

  span::before {
    transition: opacity var(--transition);
    animation: calc(var(--duration) * 1.5) breathe linear infinite;
  }
}

.shiny-cta:is(:hover, :focus-visible) {
  --gradient-percent: 20%;
  --gradient-angle-offset: 95deg;
  --gradient-shine: var(--shiny-cta-highlight-subtle);

  &,
  &::before,
  &::after {
    animation-play-state: running;
  }

  span::before {
    opacity: 1;
  }
}

@keyframes gradient-angle {
  to {
    --gradient-angle: 360deg;
  }
}

@keyframes shimmer {
  to {
    rotate: 360deg;
  }
}

@keyframes breathe {
  from,
  to {
    scale: 1;
  }
  50% {
    scale: 1.2;
  }
}


.loader {
  color: rgb(124, 124, 124);
  font-size: 25px;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 40px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-radius: 8px;
}

.words {
  overflow: hidden;
  position: relative;
}
.words::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    var(--bg-color) 10%,
    transparent 30%,
    transparent 70%,
    var(--bg-color) 90%
  );
  z-index: 20;
}

.word {
  display: block;
  height: 100%;
  padding-left: 6px;
  color: #b668ff;
  animation: spin_4991 10s infinite;
}

@keyframes spin_4991 {
  0%{
    -webkit-transform: translateY(-2%);
    transform: translateY(-2%);
  }
  15%{
    -webkit-transform: translateY(0%);
    transform: translateY(0%);
  }
  25% {
    -webkit-transform: translateY(-102%);
    transform: translateY(-102%);
  }

  35% {
    -webkit-transform: translateY(-100%);
    transform: translateY(-100%);
  }

  45% {
    -webkit-transform: translateY(-202%);
    transform: translateY(-202%);
  }

  55% {
    -webkit-transform: translateY(-200%);
    transform: translateY(-200%);
  }

  65% {
    -webkit-transform: translateY(-302%);
    transform: translateY(-302%);
  }

  75% {
    -webkit-transform: translateY(-300%);
    transform: translateY(-300%);
  }

  85% {
    -webkit-transform: translateY(-402%);
    transform: translateY(-402%);
  }

  95% {
    -webkit-transform: translateY(-400%);
    transform: translateY(-400%);
  }
}


.btn-custom-shadow{
//   -webkit-box-shadow: 0px -0px 30px -16px rgba(153, 78, 255, 1);
// -moz-box-shadow: 0px -0px 30px -16px rgba(153, 78, 255, 1);
// box-shadow: 0px -0px 30px -16px rgba(153, 78, 255, 1);
box-shadow: 0 0px 32px 0 rgba( 31, 38, 135, 0.37 );
}
