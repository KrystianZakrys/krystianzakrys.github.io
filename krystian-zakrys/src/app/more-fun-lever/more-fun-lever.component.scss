/* From Uiverse.io by njesenberger */
.funSwitch-container {
  --knob-size: 1.75em;
  display: flex;
  justify-content: center;
  position: relative;
}

.funSwitch-input {
  position: absolute;
  z-index: 2;
  bottom: 132.5%;
  border-radius: 50%;
  transform: rotate(-25deg);
  transform-origin: 50% 4.75em;
  width: var(--knob-size);
  height: var(--knob-size);
  opacity: 0;
  /* fix em sizing */
  font: inherit;
  transition: transform .24s cubic-bezier(.65, 1.35, .5, 1);
  cursor: pointer;
}

.funSwitch-input:checked {
  transform: rotate(25deg);
}

.funSwitch-handle-wrapper {
  position: absolute;
  z-index: 1;
  bottom: -135%;
  -webkit-mask-image: linear-gradient(to bottom, #000 62.125%, transparent 50%);
  mask-image: linear-gradient(to bottom, #000 62.125%, transparent 50%);
  width: 200%;
  overflow: hidden;
}

.funSwitch-handle {
  display: flex;
  flex-direction: column;
  align-items: center;
  transform: rotate(-25deg);
  transform-origin: bottom center;
  transition: transform .24s cubic-bezier(.65, 1.35, .5, 1);
}

.funSwitch-input:checked + .funSwitch-handle-wrapper > .funSwitch-handle {
  transform: rotate(25deg);
}

.funSwitch-handle-knob {
  position: relative;
  z-index: 1;
  border-radius: 50%;
  width: var(--knob-size);
  height: var(--knob-size);
  background-image: radial-gradient(farthest-corner at 70% 30%, #fedee2 4%, #9534d6 12% 24%, #451aa8 50% 65%, #ad34d6 75%);
  transition: transform .24s cubic-bezier(.65, 1.35, .5, 1);
}

.funSwitch-input:checked + .funSwitch-handle-wrapper .funSwitch-handle-knob {
  transform: rotate(-90deg);
}

/* funSwitch handle knob hover inner shadow */
.funSwitch-handle-knob::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  box-shadow: inset 0 0 8px 2px rgb(255 255 255 / .4);
  opacity: 0;
  transition: opacity .2s;
}

@media (hover: hover) {
  .funSwitch-input:hover + .funSwitch-handle-wrapper .funSwitch-handle-knob::after,
  .funSwitch-input:focus-visible + .funSwitch-handle-wrapper .funSwitch-handle-knob::after {
    opacity: 1;
  }
}

.funSwitch-handle-bar-wrapper {
  position: relative;
  width: .5em;
  height: 3em;
}

.funSwitch-handle-bar {
  position: absolute;
  top: calc(var(--knob-size) / 2 * -1);
  left: 0;
  width: 100%;
  height: calc(100% + var(--knob-size) / 2);
  background-image: linear-gradient(to right, #777475, #a4a4a4, #fff 45% 55%, #a4a4a4, #777475);
  background-position-x: .06125em;
  transition: background-position-x .24s cubic-bezier(.65, 1.35, .5, 1);
  box-shadow: inset 0 1em .25em rgb(0 0 0 / .4);
}

.funSwitch-input:checked + .funSwitch-handle-wrapper .funSwitch-handle-bar {
  background-position-x: -.06125em;
}

.funSwitch-base {
  position: relative;
  border-radius: 3.125em;
  padding: .25em;
  width: 3.5em;
  height: 1.125em;
  background-color: #fff;
  background-image: linear-gradient(to bottom, #fff, #d7d7d7);
  box-shadow: 0 -.25em .5em #fff, 0 .25em .5em #d7d7d7;
}

.funSwitch-base-inside {
  position: relative;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, #a6a6a6, #7d7d7d);
  box-shadow: inset 0 .0625em rgb(255 255 255 / .2), inset 0 -.03125em rgb(255 255 255 / 1), inset 0 -.0625em .25em rgb(0 0 0 / .1);
}

/* funSwitch base inside active */
.funSwitch-base-inside::after {
  content: '';
  position: absolute;
  border-radius: inherit;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, #c437ac, #cb13df);
  box-shadow: inherit;
  opacity: 0;
  left: 0;
  transition: opacity .24s cubic-bezier(.65, 1.35, .5, 1);
}

.funSwitch-input:checked ~ .funSwitch-base .funSwitch-base-inside::after {
  opacity: 1;
}
